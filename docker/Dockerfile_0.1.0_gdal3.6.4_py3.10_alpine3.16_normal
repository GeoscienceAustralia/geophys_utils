# alexip/geophys_utils:0.1.0 contains geophys_utils v0.1.0 and all dependencies
# GDAL Docker image sourced from https://github.com/OSGeo/gdal/

FROM ghcr.io/osgeo/gdal:alpine-normal-3.6.4 AS build

ENV PYTHONUNBUFFERED=1

# Install system dependencies for geophys_utils 0.1.0 / GDAL 3.6.4 / Python 3.9
RUN apk update && apk upgrade && \
    apk add --update --no-cache \
        'build-base' \
        'gcc' \
        'g++' \
        'gfortran' \
        'make' \
        'cmake' \
        'musl-dev' \
        'python3-dev' \
        'git' \
        'openblas-dev' \
        'lapack-dev' \
        'py3-scipy' \
        'py3-pip' \
        'python3-dev' \
        'hdf5' \
        'hdf5-dev' \
        'netcdf' \
        'netcdf-dev' \
        'netcdf-utils' \
        'geos' \
        'geos-dev'

RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --upgrade setuptools wheel && \
    pip install --no-cache-dir --upgrade gdal==3.6.4 && \
    pip install --no-cache-dir -r requirements.txt


# Create runtime image
FROM ghcr.io/osgeo/gdal:alpine-normal-3.6.4 AS runtime

RUN apk update && apk upgrade --no-cache && \
    apk add --update --no-cache \
        'hdf5' \
        'netcdf' \
        'netcdf-utils' \
        'geos' \
        'py3-scipy' \
        'py3-pip'

COPY --from=build /opt/venv /opt/venv

# Take a complete copy of the project directory into /geophys_utils (could do a git pull)
RUN mkdir /geophys_utils
WORKDIR /geophys_utils
COPY . /geophys_utils

ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/geophys_utils:$PYTHONPATH" \
    PYTHONUNBUFFERED=1

# Install geophys_utils package from current source
RUN pip install --no-cache-dir -e . && \
    echo $(scripts=$(find ./bin -type f -not -path '*.bat'); for script in $scripts; do cat $script | sed s/\\/bin\\/bash/\\/bin\\/sh/g > /opt/venv/bin/$(basename $script); chmod 755 /opt/venv/bin/$(basename $script); done)
